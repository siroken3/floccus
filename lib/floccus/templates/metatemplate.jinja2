{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This is auto generated cloudformation file.",
    "Resources": {

{% for vpc in model.vpcs %}
        "{{ vpc.cfn_resource_name() }}" : {
            "Type" : "AWS::EC2::VPC",
            "Properties" : {
                "CidrBlock" : "{{ vpc.cidr_block }}",
                "InstanceTenancy" : "{{ vpc.instanceTenancy }}"
            }
        },
{% endfor %}
{% for gateway in model.internet_gateways %}
        "{{ gateway.cfn_resource_name() }}" : {
           "Type" : "AWS::EC2::InternetGateway"
        },
{% endfor %}
{% for attachment in model.gateway_attachments %}
        "{{ attachment.cfn_resource_name() }}" : {
           "Type" : "AWS::EC2::VPCGatewayAttachment",
           "Properties" : {
               "VpcId" : { "Ref" : "{{ attachment.vpc.cfn_resource_name() }}" },
               "InternetGatewayId" : { "Ref" : "{{ attachment.gateway.cfn_resource_name() }}" }
           }
        },
{% endfor %}
{% for subnet in model.subnets %}
        "{{ subnet.cfn_resource_name() }}" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "AvailabilityZone" : "{{ subnet.availability_zone }}",
                "CidrBlock" : "{{ subnet.cidr_block }}",
                "VpcId" : { "Ref" : "{{ subnet.vpc.cfn_resource_name() }}" }
            }
        },
{% endfor %}
{% for security_group in model.security_groups %}
        "{{ security_group.cfn_resource_name() }}" : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "{{ security_group.description }}",
{% for ingress in security_group.rules %}
{% if loop.first %}
                "SecurityGroupIngress" : [{% endif %}{% for grant in ingress.grants %}{
                    "IpProtocol" : "{{ ingress.ip_protocol }}",
{% if grant.cidr_ip is not none %}
                    "CidrIp" : "{{ grant.cidr_ip }}",
{% endif %}
{% if grant.group_id is not none and security_group.vpc_id is none %}
                    "SourceSecurityGroupName" : { "Ref" : "{{ model.cfn_resouce_map[grant.group_id] }}" },
{% endif %}
{% if grant.groupId is defined and grant.groupId is not none and grant.groupId != security_group.id %}
                    "SourceSecurityGroupId" : { "Ref" : "{{ model.cfn_resource_map[grant.groupId] }}" },
{% endif %}
{#
{% if grant.owner_id is not none %}
                    "SourceSecurityGroupOwnerId" : "{{ grant.owner_id }}",
{% endif %}
#}
                    "FromPort" : "{{ ingress.from_port if ingress.from_port is not none else 0 }}",
                    "ToPort" : "{{ ingress.to_port if ingress.to_port is not none else 65536 }}"
                }{% if not loop.last %},{% endif %}
{% endfor %}{% if not loop.last %},{% endif %}
{% if loop.last %}],{% endif %}
{% endfor %}
{% for egress in security_group.rules_egress %}

{% if loop.first %}
                "SecurityGroupEgress" : [{% endif %}{% for grant in egress.grants %}{
                    "IpProtocol" : "{{ egress.ip_protocol }}",
{% if grant.cidr_ip is not none %}
                    "CidrIp" : "{{ grant.cidr_ip }}",
{% endif %}
{% if grant.group_id is not none %}
                    "SourceSecurityGroupName" : { "Ref" : "{{ model.cfn_resource_map[grant.group_id] }}" },
{% endif %}
{% if grant.groupId is defined and grant.groupId is not none %}
                    "SourceSecurityGroupId" : { "Ref" : "{{ model.cfn_resource_map[grant.groupId] }}" },
{% endif %}
{% if grant.owner_id is not none %}
                    "SourceSecurityGroupOwnerId" : { "Ref" : "{{ grant.owner_id }}" },
{% endif %}
                    "FromPort" : "{{ egress.from_port if egress.from_port is not none else 0 }}",
                    "ToPort" : "{{ egress.to_port if egress.to_port is not none else 65536 }}"
                }{% if not loop.last %},{% endif %}
{% endfor %}
{% if not loop.last %},{% endif %}
{% if loop.last %}],
{% endif %}
{% endfor %}
{% if security_group.vpc is not none %}
                "VpcId" : { "Ref" : "{{ security_group.vpc.cfn_resource_name() }}" }
{% endif %}
            }
        },
{% endfor %}
{% for route_table in model.route_tables %}
        "{{ route_table.cfn_resource_name() }}" : {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
                "VpcId" : { "Ref" : "{{ route_table.vpc.cfn_resource_name() }}" }
{% for key,value in route_table.tags.items() %}
{% if loop.first %}
                ",Tags" : [{% endif %}{ "Key":"{{ key }}","Value":"{{ value }}" }{% if not loop.last %},{% endif %}
{% if loop.last %}]{% endif %}{% endfor %}
            }
        },
{% endfor %}

{% for subnet_route_table_association in model.subnet_route_table_associations %}
        "{{ subnet_route_table_association.cfn_resource_name() }}" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "RouteTableId" : { "Ref" : "{{ subnet_route_table_association.route_table.cfn_resource_name() }}" },
                "SubnetId" : { "Ref" : "{{ subnet_route_table_association.subnet.cfn_resource_name() }}" }
            }
        },
{% endfor %}
{% for instance in model.instances %}
        "{{ instance.cfn_resource_name() }}" : {
            "Type" : "AWS::EC2::Instance",
            "Properties" : {
                "AvailabilityZone" : "{{ instance.placement }}",
                "ImageId" : "{{ instance.image_id }}",
                "InstanceType" : "{{ instance.instance_type }}",
                "KernelId" : "{{ instance.kernel }}",
                "KeyName" : "{{ instance.key_name }}",
                "Monitoring" : "{{ instance.monitored }}",
                "PrivateIpAddress" : "{{ instance.private_ip_address }}",
                "SourceDestCheck" : "{{ instance.get_attribute('sourceDestCheck').sourceDestCheck }}",
                "SubnetId" : { "Ref" : "{{ instance.subnet.cfn_resource_name() }}" },
{% for key,value in instance.tags.items() %}
{% if loop.first %}
                "Tags" : [{% endif %}{ "Key":"{{ key }}","Value":"{{ value }}" }{% if not loop.last %},{% endif %}
{% if loop.last %}],{% endif %}{% endfor %}

                "Tenancy" : "{{ instance.placement_tenancy }}"
            }
        },
{% endfor %}
{% for route in model.routes if route.gateway.id != 'local' %}
        "{{ route.cfn_resource_name() }}": {
            "Type" : "AWS::EC2::Route",
            "Properties" : {
                "DestinationCidrBlock" : "{{ route.destination_cidr_block }}",
                "RouteTableId" : { "Ref" : "{{ route.route_table.cfn_resource_name() }}" }{% if route.gateway is not none %},
                "GatewayId" : { "Ref" : "{{ route.gateway.cfn_resource_name() }}" }{% endif %}{% if route.instance is not none %},
                "InstanceId" : { "Ref" : "{{ route.instance.cfn_resource_name() }}" }{% endif %}{% if route.networkinterface is defined %},
                "NetworkInterfaceId" : { "Ref" : "{{ route.networkinterface.cfn_resource_name() }}" }{% endif %}

            }
        }{% if not loop.last %},{% endif %}

{% endfor %}
    }
}