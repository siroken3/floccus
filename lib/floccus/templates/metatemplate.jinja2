{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This is auto generated cloudformation file.",
    "Resources": {
        "{{ model.vpc.id | replace('-','') }}" : {
            "Type" : "AWS::EC2::VPC",
            "Properties" : {
                "CidrBlock" : "{{ model.vpc.cidr_block }}",
                "InstanceTenancy" : "{{ model.vpc.instanceTenancy }}"
            }
        },
{% for gateway in model.internet_gateways %}
        "{{ gateway.id | replace('-','') }}" : {
           "Type" : "AWS::EC2::InternetGateway"
        },
{% endfor %}
{% for attachment in model.gateway_attachments %}
        "{{ (attachment.vpc_id + attachment.gateway.id) | replace('-','') }}" : {
           "Type" : "AWS::EC2::VPCGatewayAttachment",
           "Properties" : {
               "VpcId" : { "Ref" : "{{ attachment.vpc_id | replace('-','') }}" },
               "InternetGatewayId" : { "Ref" : "{{ attachment.gateway.id | replace('-','') }}" }
           }
        },
{% endfor %}
{% for subnet in model.subnets %}
        "{{ subnet.id | replace('-','') }}" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "AvailabilityZone" : "{{ subnet.availability_zone }}",
                "CidrBlock" : "{{ subnet.cidr_block }}",
                "VpcId" : { "Ref" : "{{ subnet.vpc_id | replace('-','') }}" }
            }
        },
{% endfor %}
{% for route_table in model.route_tables %}
        "{{ route_table.id | replace('-','') }}" : {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
                "VpcId" : { "Ref" : "{{ route_table.vpc_id | replace('-','') }}" }
            }
        },
{% endfor %}
{% for subnet_route_table_association in model.subnet_route_table_associations if not subnet_route_table_association.main %}
        "{{ subnet_route_table_association.id | replace('-','') }}" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "RouteTableId" : { "Ref" : "{{ subnet_route_table_association.route_table_id | replace('-','') }}" },
                "SubnetId" : { "Ref" : "{{ subnet_route_table_association.subnet_id | replace('-','') }}" }
            }
        },
{% endfor %}
{% for instance in model.instances %}
        "{{ instance.logical_id() }}" : {
            "Type" : "AWS::EC2::Instance",
            "Properties" : {
                "AvailabilityZone" : "{{ instance.placement }}",
                "ImageId" : "{{ instance.image_id }}",
                "InstanceType" : "{{ instance.instance_type }}",
                "KernelId" : "{{ instance.kernel }}",
                "KeyName" : "{{ instance.key_name }}",
                "Monitoring" : "{{ instance.monitored }}",
                "PrivateIpAddress" : "{{ instance.private_ip_address }}",
                "SourceDestCheck" : "{{ instance.get_attribute('sourceDestCheck').sourceDestCheck }}",
                "SubnetId" : { "Ref" : "{{ instance.subnet_id | replace('-','') }}" },
                "Tags" : [{% for key,value in instance.tags.items() %}
"{{ key }}": "{{ value }}"{% if not loop.last %}, {% endif %}
{% endfor %}
],
                "Tenancy" : "{{ instance.placement_tenancy }}"
            }
        },
{% endfor %}
{% for route in model.routes if route.gateway_id != 'local' %}
        "{{ (route.route_table.id + route.destination_cidr_block) | replace('-','') | replace('/','') | replace('.','') }}": {
            "Type" : "AWS::EC2::Route",
            "Properties" : {
                "DestinationCidrBlock" : "{{ route.destination_cidr_block }}"
                ,"RouteTableId" : { "Ref" : "{{ route.route_table.id | replace('-','') }}" }
{% if route.gateway_id is not none %}
                ,"GatewayId" : { "Ref" : "{{ route.gateway_id | replace('-','') }}" }
{% endif %}
{% if route.instance_id is not none %}
                ,"InstanceId" : { "Ref" : "{{ route.instance_id | replace('-','') }}" }
{% endif %}
{% if route.networkinterface_id is defined %}
                ,"NetworkInterfaceId" : { "Ref" : "{{ route.networkinterface_id | replace('-','') }}" }
{% endif %}
            }
        }
{% if not loop.last %},{% endif %}
{% endfor %}
    }
}